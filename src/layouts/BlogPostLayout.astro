---
import Header from "../components/Header.astro";
import { format, formatISO } from 'date-fns'
import Image from "../components/Image.astro";
const { content: { title, subtitle, description, publishedDate, by, keywords, bannerImage, author_username } } = Astro.props;

import baseStyles from '../styles/base.css?url';

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
        <meta name="keywords" content={keywords}>
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="stylesheet" href={baseStyles}>
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-white dark:bg-gray-900 dark:text-white">
        <Header
            sticky={true}
        ></Header>
        <main class="w-full">
            <article class="flex flex-col items-center">
                <header class="flex flex-col items-center max-w-full w-full">
                    { bannerImage && <Image alt={title + ' banner'} class="md:w-[980px] md:max-w-[95%] max-w-full aspect-[1200/500] rounded-none md:rounded-md overflow-hidden" src={bannerImage}></Image> }
                    <div class={`max-w-[calc(100%-4rem)] p-0 mt-4 md:p-6 flex flex-col md:-mt-16 bg-white dark:bg-gray-900 pb-0 ${bannerImage ? 'w-[calc(520px+4rem)]' : 'mt-10 md:mt-3 w-full'}`}>
                        <h2 class="text-2xl">{title}</h2>
                        <h2 class="text-lg">{subtitle}</h2>
                        <span class="text-light">
                            {by} <span class="text-sm text-gray-700">({author_username})</span>
                        </span>
                        <time class="text-light text-sm" datetime={formatISO(new Date(publishedDate))}>
                            {format(new Date(publishedDate), 'MMMM dd, yyyy')}
                        </time>
                    </div>
                </header>
                <div class="content mt-4 max-w-[calc(100%-4rem)] w-[calc(520px+4rem)] md:px-6">
                    <slot />
                </div>
            </article>
        </main>
	</body>
</html>
<script>
	import '../function/gsap'

    document.querySelectorAll('article .content').forEach(e => {
        e.querySelectorAll('img').forEach(img => {
            const element = (img as HTMLImageElement);
            element.classList.add('loading');
            element.setAttribute('skeleton-element', '');
            element.addEventListener('load', () => element.classList.remove('loading'))
            element.addEventListener('error', () => {
                element.classList.remove('loading')
                element.classList.add('error')
            });
        })
    })

</script>
<style is:global >
    article .content {
        & p {
            padding-block: .5rem;
        }

        & img{
            aspect-ratio: ;
            border-radius: 0.375rem;
        }
    }
</style>

<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}
	html {
		font-family: system-ui, sans-serif;
		
		background-size: 224px;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}
	body{
		margin: 0;
	}
</style>
